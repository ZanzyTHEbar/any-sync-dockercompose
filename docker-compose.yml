version: '3.8'

services:
  generateconfig-anyconf:
    build:
      context: .
      dockerfile: Dockerfile-generateconfig-anyconf
    volumes:
      - code:/code
      - storage:/code/storage
    restart: "no"

  generateconfig-processing:
    depends_on:
      generateconfig-anyconf:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile: Dockerfile-generateconfig-processing
    volumes:
      - code:/code
      - storage:/code/storage
    restart: "no"

  mongo-1:
    depends_on:
      generateconfig-processing:
        condition: service_completed_successfully
    image: "mongo:${MONGO_VERSION}"
    restart: unless-stopped
    command: [ "--replSet", "${MONGO_REPLICA_SET}", "--port", "${MONGO_1_PORT}" ]
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: test $$(mongosh --port ${MONGO_1_PORT} --quiet --eval "try {rs.initiate({_id:'${MONGO_REPLICA_SET}',members:[{_id:0,host:\"mongo-1:${MONGO_1_PORT}\"}]})} catch(e) {rs.status().ok}") -eq 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    ports:
      - "127.0.0.1:${MONGO_1_PORT}:${MONGO_1_PORT}"

  redis:
    depends_on:
      generateconfig-processing:
        condition: service_completed_successfully
    image: "redis/redis-stack-server:${REDIS_VERSION}"
    restart: unless-stopped
    command: [ "redis-server", "--port", "${REDIS_PORT}", "--dir", "/data/", "--appendonly", "yes", "--maxmemory", "${REDIS_MAXMEMORY}", "--maxmemory-policy", "noeviction", "--protected-mode", "no", "--loadmodule", "/opt/redis-stack/lib/redisbloom.so" ]
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "-p", "${REDIS_PORT}", "incr", "ping" ]
      interval: 10s
      timeout: 30s
      retries: 3
    ports:
      - "127.0.0.1:${REDIS_PORT}:${REDIS_PORT}"

  any-sync-coordinator_bootstrap:
    image: "ghcr.io/anyproto/any-sync-coordinator:${ANY_SYNC_COORDINATOR_VERSION}"
    depends_on:
      generateconfig-processing:
        condition: service_completed_successfully
      mongo-1:
        condition: service_healthy
    volumes:
      - code:/code
    command: [ "/bin/any-sync-confapply", "-c", "/code/etc/any-sync-coordinator/config.yml", "-n", "/code/etc/any-sync-coordinator/network.yml", "-e" ]
    restart: "no"

  any-sync-coordinator:
    image: "ghcr.io/anyproto/any-sync-coordinator:${ANY_SYNC_COORDINATOR_VERSION}"
    depends_on:
      generateconfig-processing:
        condition: service_completed_successfully
      mongo-1:
        condition: service_healthy
      any-sync-coordinator_bootstrap:
        condition: service_completed_successfully
    ports:
      - "${ANY_SYNC_COORDINATOR_PORT}:${ANY_SYNC_COORDINATOR_PORT}"
      - "${ANY_SYNC_COORDINATOR_QUIC_PORT}:${ANY_SYNC_COORDINATOR_QUIC_PORT}/udp"
      - "${ANY_SYNC_COORDINATOR_METRIC_ADDR}:8000"
    volumes:
      - code:/code
      - coordinator_network_store:/networkStore
    restart: unless-stopped

  any-sync-filenode:
    image: "ghcr.io/anyproto/any-sync-filenode:${ANY_SYNC_FILENODE_VERSION}"
    depends_on:
      redis:
        condition: service_healthy
      any-sync-coordinator:
        condition: service_started
    ports:
      - "${ANY_SYNC_FILENODE_PORT}:${ANY_SYNC_FILENODE_PORT}"
      - "${ANY_SYNC_FILENODE_QUIC_PORT}:${ANY_SYNC_FILENODE_QUIC_PORT}/udp"
      - "${ANY_SYNC_FILENODE_METRIC_ADDR}:8000"
    volumes:
      - code:/code
      - filenode_network_store:/networkStore
    restart: unless-stopped

  any-sync-node-1:
    image: "ghcr.io/anyproto/any-sync-node:${ANY_SYNC_NODE_VERSION}"
    depends_on:
      any-sync-coordinator:
        condition: service_started
    ports:
      - "${ANY_SYNC_NODE_1_PORT}:${ANY_SYNC_NODE_1_PORT}"
      - "${ANY_SYNC_NODE_1_QUIC_PORT}:${ANY_SYNC_NODE_1_QUIC_PORT}/udp"
      - "${ANY_SYNC_NODE_1_API_SERVER_ADDR}:8080"
      - "${ANY_SYNC_NODE_1_METRIC_ADDR}:8000"
    volumes:
      - code:/code
      - node1_storage:/storage
      - node1_any_storage:/anyStorage
      - node1_network_store:/networkStore
    restart: unless-stopped

  any-sync-node-2:
    image: "ghcr.io/anyproto/any-sync-node:${ANY_SYNC_NODE_VERSION}"
    depends_on:
      any-sync-coordinator:
        condition: service_started
    ports:
      - "${ANY_SYNC_NODE_2_PORT}:${ANY_SYNC_NODE_2_PORT}"
      - "${ANY_SYNC_NODE_2_QUIC_PORT}:${ANY_SYNC_NODE_2_QUIC_PORT}/udp"
      - "${ANY_SYNC_NODE_2_API_SERVER_ADDR}:8080"
      - "${ANY_SYNC_NODE_2_METRIC_ADDR}:8000"
    volumes:
      - code:/code
      - node2_storage:/storage
      - node2_any_storage:/anyStorage
      - node2_network_store:/networkStore
    restart: unless-stopped

  any-sync-node-3:
    image: "ghcr.io/anyproto/any-sync-node:${ANY_SYNC_NODE_VERSION}"
    depends_on:
      any-sync-coordinator:
        condition: service_started
    ports:
      - "${ANY_SYNC_NODE_3_PORT}:${ANY_SYNC_NODE_3_PORT}"
      - "${ANY_SYNC_NODE_3_QUIC_PORT}:${ANY_SYNC_NODE_3_QUIC_PORT}/udp"
      - "${ANY_SYNC_NODE_3_API_SERVER_ADDR}:8080"
      - "${ANY_SYNC_NODE_3_METRIC_ADDR}:8000"
    volumes:
      - code:/code
      - node3_storage:/storage
      - node3_any_storage:/anyStorage
      - node3_network_store:/networkStore
    restart: unless-stopped

  any-sync-consensusnode:
    image: "ghcr.io/anyproto/any-sync-consensusnode:${ANY_SYNC_CONSENSUSNODE_VERSION}"
    depends_on:
      any-sync-coordinator:
        condition: service_started
    ports:
      - "${ANY_SYNC_CONSENSUSNODE_PORT}:${ANY_SYNC_CONSENSUSNODE_PORT}"
      - "${ANY_SYNC_CONSENSUSNODE_QUIC_PORT}:${ANY_SYNC_CONSENSUSNODE_QUIC_PORT}/udp"
      - "${ANY_SYNC_CONSENSUSNODE_METRIC_ADDR}:8000"
    volumes:
      - code:/code
      - consensusnode_network_store:/networkStore
    restart: unless-stopped

  netcheck:
    image: "ghcr.io/anyproto/any-sync-tools:${ANY_SYNC_TOOLS_VERSION}"
    pull_policy: always
    restart: unless-stopped
    depends_on:
      - any-sync-consensusnode
      - any-sync-filenode
      - any-sync-coordinator
      - any-sync-node-1
      - any-sync-node-2
      - any-sync-node-3
    volumes:
      - storage:/code/storage
    command: [ "tail", "-f", "/dev/null" ]
    stop_signal: SIGKILL
    tty: true
    healthcheck:
      test: any-sync-netcheck -c /code/storage/docker-generateconfig/nodes.yml 2>&1 | grep -E 'netcheck\s+success'
      interval: 10s
      start_period: 5s

volumes:
  code:
  storage:
  mongo_data:
  redis_data:
  coordinator_network_store:
  filenode_network_store:
  node1_storage:
  node1_any_storage:
  node1_network_store:
  node2_storage:
  node2_any_storage:
  node2_network_store:
  node3_storage:
  node3_any_storage:
  node3_network_store:
  consensusnode_network_store:
